/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *Ptr[2]={l1,l2};
        ListNode *head=NULL,*node=NULL; 
        int carry=0,len=0;
        
        while(Ptr[0]||Ptr[1])
        {
            int ttl=carry;
                if(Ptr[0])
                {
                    ttl+=Ptr[0]->val;
                    Ptr[0]=Ptr[0]->next;
                }
                 if(Ptr[1])
                {
                    ttl+=Ptr[1]->val;
                    Ptr[1]=Ptr[1]->next;
                }
            if(head==NULL){
                node=new ListNode(ttl%10);
                head=node;
            }
            else{
                node->next=new ListNode(ttl%10);
                node=node->next;
            }
            carry=ttl/10;
            len++;
        }
        if(len==0||carry!=0)
        node->next=new ListNode(carry);
        return head;
    }
};